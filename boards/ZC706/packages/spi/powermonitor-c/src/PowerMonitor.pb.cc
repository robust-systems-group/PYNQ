// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PowerMonitor.proto

#include "PowerMonitor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_PowerMonitor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PowerMonitor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PowerData_PowerChannelData;
}  // namespace protobuf_PowerMonitor_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
class PowerData_PowerChannelDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PowerData_PowerChannelData>
      _instance;
} _PowerData_PowerChannelData_default_instance_;
class PowerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PowerData>
      _instance;
} _PowerData_default_instance_;
class ControlDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControlData>
      _instance;
} _ControlData_default_instance_;
namespace protobuf_PowerMonitor_2eproto {
static void InitDefaultsPowerData_PowerChannelData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PowerData_PowerChannelData_default_instance_;
    new (ptr) ::PowerData_PowerChannelData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PowerData_PowerChannelData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PowerData_PowerChannelData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPowerData_PowerChannelData}, {}};

static void InitDefaultsPowerData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PowerData_default_instance_;
    new (ptr) ::PowerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PowerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PowerData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPowerData}, {
      &protobuf_PowerMonitor_2eproto::scc_info_PowerData_PowerChannelData.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsControlData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ControlData_default_instance_;
    new (ptr) ::ControlData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ControlData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControlData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControlData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PowerData_PowerChannelData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PowerData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControlData.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, bus_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, shunt_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData_PowerChannelData, power_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PowerData, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ControlData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ControlData, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ControlData, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ControlData, stop_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PowerData_PowerChannelData)},
  { 10, -1, sizeof(::PowerData)},
  { 17, -1, sizeof(::ControlData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PowerData_PowerChannelData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PowerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ControlData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "PowerMonitor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022PowerMonitor.proto\032\037google/protobuf/ti"
      "mestamp.proto\"\327\001\n\tPowerData\022-\n\010channels\030"
      "\001 \003(\0132\033.PowerData.PowerChannelData\022-\n\tti"
      "mestamp\030\002 \001(\0132\032.google.protobuf.Timestam"
      "p\032l\n\020PowerChannelData\022\014\n\004name\030\001 \001(\t\022\023\n\013b"
      "us_voltage\030\002 \001(\001\022\025\n\rshunt_voltage\030\003 \001(\001\022"
      "\017\n\007current\030\004 \001(\001\022\r\n\005power\030\005 \001(\001\"<\n\013Contr"
      "olData\022\020\n\010app_name\030\001 \001(\t\022\r\n\005start\030\002 \001(\010\022"
      "\014\n\004stop\030\003 \001(\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 341);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PowerMonitor.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PowerMonitor_2eproto

// ===================================================================

void PowerData_PowerChannelData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PowerData_PowerChannelData::kNameFieldNumber;
const int PowerData_PowerChannelData::kBusVoltageFieldNumber;
const int PowerData_PowerChannelData::kShuntVoltageFieldNumber;
const int PowerData_PowerChannelData::kCurrentFieldNumber;
const int PowerData_PowerChannelData::kPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PowerData_PowerChannelData::PowerData_PowerChannelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PowerMonitor_2eproto::scc_info_PowerData_PowerChannelData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PowerData.PowerChannelData)
}
PowerData_PowerChannelData::PowerData_PowerChannelData(const PowerData_PowerChannelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&bus_voltage_, &from.bus_voltage_,
    static_cast<size_t>(reinterpret_cast<char*>(&power_) -
    reinterpret_cast<char*>(&bus_voltage_)) + sizeof(power_));
  // @@protoc_insertion_point(copy_constructor:PowerData.PowerChannelData)
}

void PowerData_PowerChannelData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bus_voltage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_) -
      reinterpret_cast<char*>(&bus_voltage_)) + sizeof(power_));
}

PowerData_PowerChannelData::~PowerData_PowerChannelData() {
  // @@protoc_insertion_point(destructor:PowerData.PowerChannelData)
  SharedDtor();
}

void PowerData_PowerChannelData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PowerData_PowerChannelData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PowerData_PowerChannelData::descriptor() {
  ::protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PowerData_PowerChannelData& PowerData_PowerChannelData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PowerMonitor_2eproto::scc_info_PowerData_PowerChannelData.base);
  return *internal_default_instance();
}


void PowerData_PowerChannelData::Clear() {
// @@protoc_insertion_point(message_clear_start:PowerData.PowerChannelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bus_voltage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_) -
      reinterpret_cast<char*>(&bus_voltage_)) + sizeof(power_));
  _internal_metadata_.Clear();
}

bool PowerData_PowerChannelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PowerData.PowerChannelData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PowerData.PowerChannelData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bus_voltage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bus_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double shunt_voltage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &shunt_voltage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double power = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &power_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PowerData.PowerChannelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PowerData.PowerChannelData)
  return false;
#undef DO_
}

void PowerData_PowerChannelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PowerData.PowerChannelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PowerData.PowerChannelData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // double bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->bus_voltage(), output);
  }

  // double shunt_voltage = 3;
  if (this->shunt_voltage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->shunt_voltage(), output);
  }

  // double current = 4;
  if (this->current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->current(), output);
  }

  // double power = 5;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->power(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PowerData.PowerChannelData)
}

::google::protobuf::uint8* PowerData_PowerChannelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PowerData.PowerChannelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PowerData.PowerChannelData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // double bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->bus_voltage(), target);
  }

  // double shunt_voltage = 3;
  if (this->shunt_voltage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->shunt_voltage(), target);
  }

  // double current = 4;
  if (this->current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->current(), target);
  }

  // double power = 5;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->power(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PowerData.PowerChannelData)
  return target;
}

size_t PowerData_PowerChannelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PowerData.PowerChannelData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // double bus_voltage = 2;
  if (this->bus_voltage() != 0) {
    total_size += 1 + 8;
  }

  // double shunt_voltage = 3;
  if (this->shunt_voltage() != 0) {
    total_size += 1 + 8;
  }

  // double current = 4;
  if (this->current() != 0) {
    total_size += 1 + 8;
  }

  // double power = 5;
  if (this->power() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerData_PowerChannelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PowerData.PowerChannelData)
  GOOGLE_DCHECK_NE(&from, this);
  const PowerData_PowerChannelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PowerData_PowerChannelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PowerData.PowerChannelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PowerData.PowerChannelData)
    MergeFrom(*source);
  }
}

void PowerData_PowerChannelData::MergeFrom(const PowerData_PowerChannelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PowerData.PowerChannelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.bus_voltage() != 0) {
    set_bus_voltage(from.bus_voltage());
  }
  if (from.shunt_voltage() != 0) {
    set_shunt_voltage(from.shunt_voltage());
  }
  if (from.current() != 0) {
    set_current(from.current());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
}

void PowerData_PowerChannelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PowerData.PowerChannelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PowerData_PowerChannelData::CopyFrom(const PowerData_PowerChannelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PowerData.PowerChannelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerData_PowerChannelData::IsInitialized() const {
  return true;
}

void PowerData_PowerChannelData::Swap(PowerData_PowerChannelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PowerData_PowerChannelData::InternalSwap(PowerData_PowerChannelData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bus_voltage_, other->bus_voltage_);
  swap(shunt_voltage_, other->shunt_voltage_);
  swap(current_, other->current_);
  swap(power_, other->power_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PowerData_PowerChannelData::GetMetadata() const {
  protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PowerData::InitAsDefaultInstance() {
  ::_PowerData_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void PowerData::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PowerData::kChannelsFieldNumber;
const int PowerData::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PowerData::PowerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PowerMonitor_2eproto::scc_info_PowerData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PowerData)
}
PowerData::PowerData(const PowerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PowerData)
}

void PowerData::SharedCtor() {
  timestamp_ = NULL;
}

PowerData::~PowerData() {
  // @@protoc_insertion_point(destructor:PowerData)
  SharedDtor();
}

void PowerData::SharedDtor() {
  if (this != internal_default_instance()) delete timestamp_;
}

void PowerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PowerData::descriptor() {
  ::protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PowerData& PowerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PowerMonitor_2eproto::scc_info_PowerData.base);
  return *internal_default_instance();
}


void PowerData::Clear() {
// @@protoc_insertion_point(message_clear_start:PowerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  _internal_metadata_.Clear();
}

bool PowerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PowerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PowerData.PowerChannelData channels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PowerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PowerData)
  return false;
#undef DO_
}

void PowerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PowerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PowerData.PowerChannelData channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PowerData)
}

::google::protobuf::uint8* PowerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PowerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PowerData.PowerChannelData channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_timestamp(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PowerData)
  return target;
}

size_t PowerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PowerData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .PowerData.PowerChannelData channels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PowerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PowerData)
  GOOGLE_DCHECK_NE(&from, this);
  const PowerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PowerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PowerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PowerData)
    MergeFrom(*source);
  }
}

void PowerData::MergeFrom(const PowerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PowerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
}

void PowerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PowerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PowerData::CopyFrom(const PowerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PowerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PowerData::IsInitialized() const {
  return true;
}

void PowerData::Swap(PowerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PowerData::InternalSwap(PowerData* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PowerData::GetMetadata() const {
  protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControlData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlData::kAppNameFieldNumber;
const int ControlData::kStartFieldNumber;
const int ControlData::kStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlData::ControlData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PowerMonitor_2eproto::scc_info_ControlData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ControlData)
}
ControlData::ControlData(const ControlData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_) -
    reinterpret_cast<char*>(&start_)) + sizeof(stop_));
  // @@protoc_insertion_point(copy_constructor:ControlData)
}

void ControlData::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_) -
      reinterpret_cast<char*>(&start_)) + sizeof(stop_));
}

ControlData::~ControlData() {
  // @@protoc_insertion_point(destructor:ControlData)
  SharedDtor();
}

void ControlData::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ControlData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControlData::descriptor() {
  ::protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControlData& ControlData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PowerMonitor_2eproto::scc_info_ControlData.base);
  return *internal_default_instance();
}


void ControlData::Clear() {
// @@protoc_insertion_point(message_clear_start:ControlData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_) -
      reinterpret_cast<char*>(&start_)) + sizeof(stop_));
  _internal_metadata_.Clear();
}

bool ControlData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ControlData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string app_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ControlData.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ControlData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ControlData)
  return false;
#undef DO_
}

void ControlData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ControlData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ControlData.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // bool start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->start(), output);
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->stop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ControlData)
}

::google::protobuf::uint8* ControlData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ControlData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ControlData.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // bool start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->start(), target);
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->stop(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ControlData)
  return target;
}

size_t ControlData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ControlData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // bool start = 2;
  if (this->start() != 0) {
    total_size += 1 + 1;
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ControlData)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ControlData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ControlData)
    MergeFrom(*source);
  }
}

void ControlData::MergeFrom(const ControlData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ControlData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.stop() != 0) {
    set_stop(from.stop());
  }
}

void ControlData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ControlData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlData::CopyFrom(const ControlData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ControlData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlData::IsInitialized() const {
  return true;
}

void ControlData::Swap(ControlData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlData::InternalSwap(ControlData* other) {
  using std::swap;
  app_name_.Swap(&other->app_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControlData::GetMetadata() const {
  protobuf_PowerMonitor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PowerMonitor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PowerData_PowerChannelData* Arena::CreateMaybeMessage< ::PowerData_PowerChannelData >(Arena* arena) {
  return Arena::CreateInternal< ::PowerData_PowerChannelData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PowerData* Arena::CreateMaybeMessage< ::PowerData >(Arena* arena) {
  return Arena::CreateInternal< ::PowerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ControlData* Arena::CreateMaybeMessage< ::ControlData >(Arena* arena) {
  return Arena::CreateInternal< ::ControlData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
